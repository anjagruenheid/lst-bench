{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "type": "object",
  "title": "Schema for workload definition file",
  "required": [ "version", "id", "phases" ],
  "properties": {
    "version": {
      "type": "integer",
      "title": "File format version"
    },
    "id": {
      "type": "string",
      "title": "Identifier for the workload"
    },
    "phases": {
      "type": "array",
      "title": "List of phases",
      "items": {
        "type": "object",
        "title": "Phase",
        "required": [ "id", "sessions" ],
        "properties": {
          "id": {
            "type": "string",
            "title": "Identifier for the phase"
          },
          "sessions": {
            "type": "array",
            "title": "List of sessions",
            "items": {
              "type": "object",
              "title": "Session",
              "required": [ "tasks" ],
              "properties": {
                "tasks": {
                  "type": "array",
                  "title": "List of tasks",
                  "items": {
                    "type": "object",
                    "title": "Task",
                    "required": [ "template_id" ],
                    "properties": {
                      "template_id": {
                        "type": "string",
                        "title": "Template identifier",
                        "description": "Identifier of the template that this task is based on"
                      },
                      "permute_order": {
                        "type": "boolean",
                        "title": "Enable scripts order permutation",
                        "description": "If task template specified a permutation orders path, this property can be used to specify whether the permutation should be applied or not"
                      },
                      "time_travel_phase_id": {
                        "type": "string",
                        "title": "Time travel phase identifier",
                        "description": "If the task template supports time travel, this property can be used to specify the version of the data that will be queried by this task"
                      },
                      "custom_task_executor": {
                        "type": "string",
                        "title": "Identifier for a custom task executor",
                        "description": "If the task template should be executed with a custom task executor, this property can be used to specify which executor to use"
                      },
                      "custom_task_executor_arguments": {
                        "type": "object",
                        "title": "Custom task executor arguments",
                        "description": "Any arguments passed to a custom executor need to be defined here.",
                        "properties": {
                          "dependent_task_batch_size": {
                            "type": "integer",
                            "title": "Batch size for DependentTaskExecutor",
                            "description": "Sets the batch size for a task executed; specific to the DependentTaskExecutor class"
                          },
                          "concurrent_task_num_joins": {
                            "type": "integer",
                            "title": "List of number of joins that are to be tested",
                            "description": "Determines how the query will be extended with the number of joins"
                          },
                          "concurrent_task_min_query_length": {
                            "type": "integer",
                            "title": "List of minimum query lengths that are to be tested",
                            "description": "Determines how the query will be extended with padding if the minimum query length is not exceeded"
                          }
                        }
                      },
                      "replace_regex": {
                        "type": "array",
                        "title": "List of regex to match and replace",
                        "description": "List of regex to match and corresponding replacement in the SQL scripts associated with this task",
                        "items": {
                          "type": "object",
                          "title": "Regex to replace",
                          "required": [ "pattern", "replacement" ],
                          "properties": {
                            "pattern": {
                              "type": "string",
                              "title": "Regex pattern to match"
                            },
                            "replacement": {
                              "type": "string",
                              "title": "Replacement for each match"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "target_endpoint": {
                  "type": "integer",
                  "title": "Target endpoint index (default: 0)",
                  "description": "The positional index (starting from 0) of the connection manager within the connections configuration file"
                },
                "duplicate_session": {
                  "type": "integer",
                  "title": "Duplication count for this session",
                  "description": "Determines how often a session will be duplicated; total session count is duplicate_session + 1 (default: 0)"
                }
              }
            }
          }
        }
      }
    }
  }
}